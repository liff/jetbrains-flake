---
name: build-packages

on:
  push:
  workflow_dispatch:
  workflow_run:
    workflows: ["Refresh product versions"]
    types: [completed]
    branches: [main]

jobs:
  build-jcef:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pkg:
          - jetbrains-jcef
          - fsnotifier
        nixpkgs_branch:
          - nixos-unstable
        system:
          - x86_64-linux
          - aarch64-linux

    name: "Build library ${{ matrix.pkg }} for ${{ matrix.nixpkgs_branch }} on ${{ matrix.system }}"

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v21
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: liff
          authToken: '${{ secrets.cachix_auth_token }}'
          signingKey: '${{ secrets.cachix_signing_key }}'
      - uses: nixbuild/nixbuild-action@v15
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}

      - name: Build package ${{ matrix.pkg }}
        run: |-
          nix -L build \
              --eval-store auto \
              --store ssh-ng://eu.nixbuild.net \
              --override-input nixpkgs github:nixos/nixpkgs/${{ matrix.nixpkgs_branch }} \
              --system ${{ matrix.system }} \
              .#${{ matrix.pkg }}

  build-jetbrainsruntime:
    runs-on: ubuntu-latest
    needs: build-jcef

    strategy:
      matrix:
        pkg:
          - jetbrainsruntime
        nixpkgs_branch:
          - nixos-unstable
        system:
          - x86_64-linux
          - aarch64-linux

    name: "Build library ${{ matrix.pkg }} for ${{ matrix.nixpkgs_branch }} on ${{ matrix.system }}"

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v21
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: liff
          authToken: '${{ secrets.cachix_auth_token }}'
          signingKey: '${{ secrets.cachix_signing_key }}'
      - uses: nixbuild/nixbuild-action@v15
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}

      - name: Build package ${{ matrix.pkg }}
        run: |-
          nix -L build \
              --eval-store auto \
              --store ssh-ng://eu.nixbuild.net \
              --override-input nixpkgs github:nixos/nixpkgs/${{ matrix.nixpkgs_branch }} \
              --system ${{ matrix.system }} \
              .#${{ matrix.pkg }}

  build-applications:
    runs-on: ubuntu-latest
    needs: build-jetbrainsruntime

    env:
      NIXPKGS_ALLOW_UNFREE: 1

    strategy:
      matrix:
        pkg:
          - intellij-idea-community
          - intellij-idea-ultimate
          - intellij-idea-ultimate-jbr
        nixpkgs_branch:
          - nixos-unstable
        system:
          - x86_64-linux
          - aarch64-linux
        exclude:
          - pkg: intellij-idea-ultimate-jbr
            system: aarch64-linux

    name: "Build application ${{ matrix.pkg }} for ${{ matrix.nixpkgs_branch }} on ${{ matrix.system }}"

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v21
        with:
          extra_nix_config: |
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: liff
          authToken: '${{ secrets.cachix_auth_token }}'
          signingKey: '${{ secrets.cachix_signing_key }}'
      - uses: nixbuild/nixbuild-action@v15
        with:
          nixbuild_ssh_key: '${{ secrets.nixbuild_ssh_key }}'
      - name: Build package ${{ matrix.pkg }}
        run: |-
          nix -L build \
              --impure \
              --eval-store auto \
              --store ssh-ng://eu.nixbuild.net \
              --override-input nixpkgs github:nixos/nixpkgs/${{ matrix.nixpkgs_branch }} \
              --system ${{ matrix.system }} \
              .#${{ matrix.pkg }}
