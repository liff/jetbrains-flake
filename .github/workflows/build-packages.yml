---
name: build-packages

on:
  push:
    paths-ignore:
      - 'updater/**'
      - '.github/workflows/build-updater.yml'
  workflow_dispatch:
  workflow_run:
    workflows: ["Refresh product versions"]
    types: [completed]
    branches: [main]

jobs:
  build-jcef:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        pkg:
          - jetbrains-jcef
        nixpkgs_branch:
          - nixos-unstable
          - nixos-21.11
        system:
          - x86_64-linux

    name: "Build library ${{ matrix.pkg }} for ${{ matrix.nixpkgs_branch }} on ${{ matrix.system }}"

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
      - uses: cachix/cachix-action@v10
        with:
          name: liff
          authToken: '${{ secrets.cachix_auth_token }}'
          signingKey: '${{ secrets.cachix_signing_key }}'
      - uses: nixbuild/nixbuild-action@v8
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}

      - name: Build package ${{ matrix.pkg }}
        run: |-
          nix -L build \
              --override-input nixpkgs github:nixos/nixpkgs/${{ matrix.nixpkgs_branch }} \
              --system ${{ matrix.system }} \
              .#${{ matrix.pkg }}

  build-jetbrainsruntime:
    runs-on: ubuntu-20.04
    needs: build-jcef

    strategy:
      matrix:
        pkg:
          - jetbrainsruntime
        nixpkgs_branch:
          - nixos-unstable
          - nixos-21.11
        system:
          - x86_64-linux

    name: "Build library ${{ matrix.pkg }} for ${{ matrix.nixpkgs_branch }} on ${{ matrix.system }}"

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
      - uses: cachix/cachix-action@v10
        with:
          name: liff
          authToken: '${{ secrets.cachix_auth_token }}'
          signingKey: '${{ secrets.cachix_signing_key }}'
      - uses: nixbuild/nixbuild-action@v8
        with:
          nixbuild_ssh_key: ${{ secrets.nixbuild_ssh_key }}

      - name: Build package ${{ matrix.pkg }}
        run: |-
          nix -L build \
              --override-input nixpkgs github:nixos/nixpkgs/${{ matrix.nixpkgs_branch }} \
              --system ${{ matrix.system }} \
              .#${{ matrix.pkg }}

  build-applications:
    runs-on: ubuntu-20.04
    needs: build-jetbrainsruntime

    env:
      NIXPKGS_ALLOW_UNFREE: 1

    strategy:
      matrix:
        pkg:
          - intellij-idea-community
          - intellij-idea-ultimate
          - intellij-idea-ultimate-jbr
        nixpkgs_branch:
          - nixos-unstable
          - nixos-21.11
        system:
          - x86_64-linux

    name: "Build application ${{ matrix.pkg }} for ${{ matrix.nixpkgs_branch }} on ${{ matrix.system }}"

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
      - uses: cachix/cachix-action@v10
        with:
          name: liff
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - uses: nixbuild/nixbuild-action@v8
        with:
          nixbuild_ssh_key: '${{ secrets.NIXBUILD_SSH_KEY }}'
      - name: Build package ${{ matrix.pkg }}
        run: |-
          nix -L build \
              --impure \
              --override-input nixpkgs github:nixos/nixpkgs/${{ matrix.nixpkgs_branch }} \
              --system ${{ matrix.system }} \
              .#${{ matrix.pkg }}
